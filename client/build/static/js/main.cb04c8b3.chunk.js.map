{"version":3,"sources":["components/NavBar/index.js","components/SearchBar/index.js","components/Wrapper/index.js","components/Grid/index.js","components/Card/index.js","utils/API.js","pages/Electronics/index.js","pages/Cart/index.js","components/Signupform/index.js","pages/Signup/index.js","components/Login/index.js","pages/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["NavTabs","className","to","window","location","pathname","SearchBar","props","htmlFor","value","search","onChange","handleInputChange","name","type","placeholder","id","onClick","handleFormSubmit","Wrapper","children","Container","fluid","Card","src","image","title","rating","price","handleFormCart","handleDetail","console","log","axios","get","Electronics","state","products","results","e","setState","target","preventDefault","API","then","res","this","friends","map","product","key","Component","Electronic","SignupForm","username","placholder","password","firstName","lastName","email","street","city","zipcode","typr","Signup","LoginForm","Login","App","exact","path","component","Cart","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb04c8b3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavTabs() {\r\n  return (\r\n    <ul className=\"nav nav-tabs\">\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className={window.location.pathname === \"/\" ? \"nav-link active\" : \"nav-link\"}>\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/electronics\"\r\n          className={window.location.pathname === \"/electronics\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Electronics\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link\r\n          to=\"/cart\"\r\n          className={window.location.pathname === \"/cart\" ? \"nav-link active\" : \"nav-link\"}\r\n        >\r\n          Cart\r\n        </Link>\r\n      </li>\r\n\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default NavTabs;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchBar(props) {\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"search\">Search:</label>\r\n                <input\r\n                    value={props.search}\r\n                    onChange={props.handleInputChange}\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search Stuff...\"\r\n                    id=\"search\"\r\n                />\r\n                <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\r\n                    Search\r\n        </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n    return (\r\n        <div\r\n            className={size\r\n                .split(\" \")\r\n                .map(size => \"col-\" + size)\r\n                .join(\" \")}\r\n        >\r\n            {children}\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"img-container\">\r\n                <img src={props.image} />\r\n            </div>\r\n            <div className=\"content\">\r\n                <ul>\r\n                    <li>\r\n                        <strong>{props.title}</strong>\r\n                    </li>\r\n                    <li>\r\n                        <strong>{props.rating}</strong>\r\n                    </li>\r\n                    <li>\r\n                        <strong>{props.price}</strong>\r\n                    </li>\r\n                    <button type=\"submit\" onClick={props.handleFormCart}\r\n                        className=\"btn btn-success\">\r\n                        Cart\r\n                </button>\r\n                    <button type=\"submit\" onClick={props.handleDetail}\r\n                        className=\"btn btn-success\">\r\n                        Details\r\n                </button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;","import axios from \"axios\";\r\n\r\nexport default {\r\n    getProduct: function(search) {\r\n        console.log(search)\r\n        return axios.get(\"/api/products/\" + search);\r\n}\r\n};","// import products from \"../../product.json\";\r\nimport SearchBar from \"../../components/SearchBar\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport { Container } from \"../../components/Grid\";\r\nimport Card from \"../../components/Card\";\r\nimport React, { Component } from \"react\";\r\nimport API from \"../../utils/API.js\";\r\n\r\nclass Electronics extends Component {\r\n    state = {\r\n        products:[],\r\n        search: \"\",\r\n        results: []\r\n    };\r\n    // componentDidMount() {\r\n    //     this.setState({ products: products })\r\n    // }\r\n    handleInputChange = e => {\r\n        this.setState({ search: e.target.value });\r\n    };\r\n    handleFormSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state.search)\r\n        API.getProduct(this.state.search)\r\n        .then(res => {\r\n            this.setState({ results: res.products })\r\n        })\r\n        console.log(this.state.results)\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.friends)\r\n        return (\r\n            <Container fluid>\r\n\r\n                <h1 className=\"title\">Ecommerce</h1>\r\n                <SearchBar\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n                <Wrapper>\r\n                    {this.state.products.map(product => (\r\n                        <Card\r\n                            id={product.id}\r\n                            key={product.id}\r\n                            title={product.id}\r\n                            rating={product.rating}\r\n                            price={product.price}\r\n                        />\r\n\r\n\r\n                    )\r\n                    )}\r\n\r\n                </Wrapper>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Electronics;","// import products from \"../../product.json\";\r\nimport Wrapper from \"../../components/Wrapper\";\r\nimport {Container }from \"../../components/Grid\";\r\nimport Card from \"../../components/Card\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass Electronic extends Component {\r\n    state = {\r\n        // products: products\r\n    };\r\n\r\n    render() {\r\n        console.log(this.state.friends)\r\n        return (\r\n            <Container fluid>\r\n\r\n\r\n            <h1 className=\"title\">CART</h1>\r\n            <Wrapper>\r\n                {this.state.products.map(product => (\r\n                    <Card\r\n                    id={product.id}\r\n                    key={product.id}\r\n                    title={product.id}\r\n                    rating={product.rating}\r\n                    price={product.price}\r\n                    />\r\n\r\n\r\n                ))}\r\n\r\n            </Wrapper>\r\n            </Container>\r\n\r\n        )\r\n    }\r\n}\r\nexport default Electronic;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SignupForm(props) {\r\n    return (\r\n        <form className=\"sigup-form\">\r\n            <div className=\"form\">\r\n            <label htmlFor=\"username\">Username:</label>\r\n            <input\r\n            value={props.username}\r\n            onChange={props.handleInputChange}\r\n            name=\"username\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placholder=\"userName\"\r\n            id=\"username\"\r\n            />\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n            value={props.password}\r\n            onChange={props.handleInputChange}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placholder=\"Password\"\r\n            id=\"password\"\r\n            />\r\n            <h2>Name</h2>\r\n            <label htmlFor=\"firstname\">First Name:</label>\r\n                <input\r\n                value={props.firstName}\r\n                onChange={props.handleInputChange}\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"First Name\"\r\n                id=\"firstname\"\r\n                />\r\n                <label htmlFor=\"lastname\">Last Name:</label>\r\n                <input\r\n                value={props.lastName}\r\n                onChange={props.handleInputChange}\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"Last Name\"\r\n                id=\"lastname\"\r\n                />\r\n                <label htmlFor=\"email\">Email:</label>\r\n                <input\r\n                value={props.email}\r\n                onChange={props.handleInputChange}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                placholder=\"Email\"\r\n                id=\"email\"\r\n                />\r\n                <h2>Address</h2>\r\n                <div className=\"address\">\r\n                <label htmlFor=\"street\">Street:</label>\r\n                <input\r\n                value={props.street}\r\n                onChange={props.handleInputChange}\r\n                name=\"street\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"Street\"\r\n                id=\"street\"\r\n                />\r\n                <label htmlFor=\"city\">City:</label>\r\n                <input\r\n                value={props.city}\r\n                onChange={props.handleInputChange}\r\n                name=\"city\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"City\"\r\n                id=\"city\"\r\n                />\r\n                <label htmlFor=\"state\">State:</label>\r\n                <input\r\n                value={props.state}\r\n                onChange={props.handleInputChange}\r\n                name=\"state\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"State\"\r\n                id=\"state\"\r\n                />\r\n                <label htmlFor=\"zipcode\">Zipcode:</label>\r\n                <input\r\n                value={props.zipcode}\r\n                onChange={props.handleInputChange}\r\n                name=\"zipcode\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placholder=\"Zipcode\"\r\n                id=\"zipcode\"\r\n                />\r\n                </div>\r\n                <button typr=\"submit\" onClick={props.handleFormSubmit}\r\n                className=\"btn btn-success\">\r\n                    Create\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, {Component} from \"react\";\r\nimport  SignupForm from \"../../components/Signupform\";\r\nimport \"./style.css\";\r\n\r\nclass Signup extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1 className=\"title\">ECommerce</h1>\r\n                <SignupForm/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Signup;\r\n\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction LoginForm(props) {\r\n    return (\r\n        <form className=\"login-form\">\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"Username\">UserName:</label>\r\n                <input\r\n                    value={props.username}\r\n                    onChange={props.handleInputChange}\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"UserName\"\r\n                    id=\"userLogin\"\r\n                />\r\n                <input\r\n                    value={props.password}\r\n                    onChange={props.handleInputChange}\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"password\"\r\n                    id=\"passwordLogin\"\r\n                />\r\n                <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\r\n                    Login\r\n        </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default LoginForm;","import React, {Component} from \"react\";\r\nimport  LoginForm from \"../../components/Login\";\r\nimport \"./stlye.css\";\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1 className=\"title\">ECommerce</h1>\r\n                <LoginForm/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Login;\r\n\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavTabs from \"./components/NavBar\";\nimport Electronics from \"./pages/Electronics\";\nimport Cart from \"./pages/Cart\";\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <NavTabs />\n        <Route exact path=\"/\" component={Login} />\n        <Route exact path=\"/Signup\" component={Signup} />\n        <Route exact path=\"/Electronics\" component={Electronics} />\n        <Route exact path=\"/Cart\" component={Cart} />\n      </div>\n    </Router>\n  );\n}\n \nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}